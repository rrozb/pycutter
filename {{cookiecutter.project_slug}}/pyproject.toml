[project]
name = "{{ cookiecutter.project_slug }}"
version = "0.0.1"
description = "{{ cookiecutter.project_description }}"
authors = [
    {name = "{{ cookiecutter.author_name }}", email = "{{ cookiecutter.author_email }}"}
]
readme = "README.md"
requires-python = ">={{ cookiecutter.python_version }}, <4.0"

[tool.poetry.dependencies]
python-dotenv = "^1.0.1"
{% if cookiecutter.project_type == "api" %}
fastapi = "^0.104.0"
uvicorn = "^0.24.0"
{% endif %}

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
ruff = "^0.9.0"
mypy = "^1.14.0"
deptry = "^0.22.0"

[build-system]
requires = ["poetry-core>=2.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py312"
line-length = 120
src = ["src", "tests"]

[tool.ruff.lint]
select = [
    "E", "W", "F", "B", "C4", "I", "YTT", "S", "SIM", "UP"
]
fixable = ["ALL"]

[tool.ruff.format]
quote-style = "double"

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.poetry]
package-mode = true 

[tool.mypy]
python_version = "{{ cookiecutter.python_version }}"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true 